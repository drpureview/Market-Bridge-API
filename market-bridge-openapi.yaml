openapi: 3.1.0
info:
  title: Market Bridge API
  version: "1.2.0"
  description: |
    API for market data and signals using Upstox + Yahoo Finance.
    Features:
    - Index constituents (NSE CSVs; Sensex via Wikipedia)
    - Historical OHLCV (Upstox with yfinance fallback)
    - LTP via Upstox
    - Indicators (RSI, SMA/EMA, MACD, Bollinger)
    - Strategies (PTJ, Turtle, Seykota, Schwartz)
    - Screeners across indices/symbols
    - Single-stock signal
    - Fundamentals (P/E, P/B, MarketCap, approx ROCE)
    - Breakout detection (volume + pattern rules)

servers:
  - url: https://your-app.onrender.com

paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Service is alive
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  ts: { type: number }

  /:
    get:
      summary: Service metadata and examples
      responses:
        '200':
          description: Root info

  /oauth/upstox/login:
    get:
      summary: Start Upstox OAuth login
      parameters:
        - in: query
          name: user_key
          required: true
          schema: { type: string }
      responses:
        '302':
          description: Redirect to Upstox login

  /oauth/upstox/callback:
    get:
      summary: Upstox OAuth callback
      parameters:
        - in: query
          name: code
          required: true
          schema: { type: string }
        - in: query
          name: state
          required: false
          schema: { type: string }
      responses:
        '200':
          description: HTML page indicating result
          content:
            text/html:
              schema:
                type: string

  /api/map:
    get:
      summary: Map symbol to Upstox instrument
      parameters:
        - in: query
          name: symbol
          required: true
          description: e.g., RELIANCE.NS
          schema: { type: string }
      responses:
        '200':
          description: Mapping info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapResult'

  /api/ltp:
    get:
      summary: Get LTP from Upstox (v3)
      parameters:
        - in: query
          name: instrument_keys
          required: true
          schema: { type: string, description: 'Comma- or pipe-separated instrument_key(s)' }
        - in: query
          name: user_key
          required: false
          schema: { type: string }
      responses:
        '200':
          description: Raw Upstox LTP response
          content:
            application/json:
              schema:
                type: object
                description: Upstox v3 passthrough shape; keys are instrument_keys
        '401':
          description: Upstox not linked

  /api/historical:
    get:
      summary: Historical data from Yahoo Finance (with internal fallback)
      parameters:
        - in: query
          name: symbol
          required: true
          schema: { type: string }
        - in: query
          name: period
          required: false
          schema: { type: string, default: '6mo' }
        - in: query
          name: interval
          required: false
          schema: { type: string, default: '1d' }
      responses:
        '200':
          description: OHLCV candles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalCandles'
        '404':
          description: No data

  /api/historical_upstox:
    get:
      summary: Historical data from Upstox (v3 with v2 fallback)
      parameters:
        - in: query
          name: symbol
          required: false
          schema: { type: string }
        - in: query
          name: instrument_key
          required: false
          schema: { type: string }
        - in: query
          name: unit
          required: false
          schema: { type: string, enum: [days, weeks, months], default: weeks }
        - in: query
          name: interval
          required: false
          schema: { type: string, default: '1' }
        - in: query
          name: years
          required: false
          schema: { type: integer, default: 10 }
        - in: query
          name: to_date
          required: false
          schema: { type: string, format: date }
        - in: query
          name: from_date
          required: false
          schema: { type: string, format: date }
        - in: query
          name: user_key
          required: false
          schema: { type: string }
      responses:
        '200':
          description: OHLCV candles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalCandlesUpstox'
        '400':
          description: Bad request
        '404':
          description: No data

  /api/indicators:
    post:
      summary: Compute technical indicators
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicatorsReq'
      responses:
        '200':
          description: Indicators result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorsResp'
        '404':
          description: No data

  /api/fundamentals:
    get:
      summary: Get fundamentals (yfinance)
      parameters:
        - in: query
          name: symbol
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Fundamentals info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundamentalsResp'

  /api/constituents:
    get:
      summary: Get index constituents
      parameters:
        - in: query
          name: index
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Constituents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstituentsResp'

  /api/listings:
    get:
      summary: List instruments by exchange
      parameters:
        - in: query
          name: exchange
          required: true
          schema: { type: string, enum: [NSE_EQ, BSE_EQ] }
      responses:
        '200':
          description: Listings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingsResp'

  /api/screen_indices:
    post:
      summary: Run strategies across indices/symbols
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenIndicesReq'
      responses:
        '200':
          description: Screener results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenIndicesResp'

  /api/signal:
    post:
      summary: Run strategies for single stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalReq'
      responses:
        '200':
          description: Signal result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignalResp'
        '404':
          description: No data

  /api/breakout_signal:
    post:
      summary: Analyze breakout for single symbol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BreakoutSignalReq'
      responses:
        '200':
          description: Breakout signal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreakoutHit'

  /api/breakouts_symbols_one:
    post:
      summary: Breakout scanner (cursor-based; one symbol per call)
      description: Pass the full list once and increment `cursor` across calls.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BreakoutsSymbolsReq'
      responses:
        '200':
          description: Scan result for the current cursor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreakoutsSymbolsResp'
        '400':
          description: Invalid request

components:
  schemas:
    Candle:
      type: object
      properties:
        t: { type: string, description: 'ISO timestamp or pandas Date string' }
        o: { type: number }
        h: { type: number }
        l: { type: number }
        c: { type: number }
        v: { type: number }

    HistoricalCandles:
      type: object
      properties:
        symbol: { type: string }
        candles:
          type: array
          items: { $ref: '#/components/schemas/Candle' }
      required: [symbol, candles]

    HistoricalCandlesUpstox:
      type: object
      properties:
        instrument_key: { type: string }
        unit: { type: string, enum: [days, weeks, months] }
        interval: { type: string }
        from_date: { type: string, nullable: true }
        to_date: { type: string, nullable: true }
        count: { type: integer }
        candles:
          type: array
          items: { $ref: '#/components/schemas/Candle' }
      required: [instrument_key, unit, interval, count, candles]

    MapResult:
      type: object
      properties:
        symbol: { type: string }
        found: { type: boolean }
        message: { type: string, nullable: true }
        trading_symbol: { type: string, nullable: true }
        instrument_key: { type: string, nullable: true }
        segment: { type: string, nullable: true }
        exchange: { type: string, nullable: true }
        short_name: { type: string, nullable: true }
      required: [symbol, found]

    IndicatorsReq:
      type: object
      properties:
        symbol: { type: string }
        data_source:
          type: string
          enum: [auto, upstox, yfinance]
          default: auto
        unit: { type: string, default: days }
        interval: { type: string, default: '1' }
        period: { type: string, default: '1y' }
        hist_date: { type: string, format: date, nullable: true }
      required: [symbol]

    IndicatorsResp:
      type: object
      description: Computed indicators for the given symbol
      properties:
        symbol: { type: string }
        as_of: { type: string }
        SMA:
          type: object
          additionalProperties: { type: number, nullable: true }
          description: e.g., SMA_50, SMA_100, SMA_150, SMA_200
        EMA:
          type: object
          additionalProperties: { type: number, nullable: true }
        RSI_14: { type: number, nullable: true }
        MACD:
          type: object
          properties:
            macd: { type: number }
            signal: { type: number }
            hist: { type: number }
        Bollinger:
          type: object
          properties:
            MA20: { type: number, nullable: true }
            Upper: { type: number, nullable: true }
            Lower: { type: number, nullable: true }
      required: [symbol, as_of]

    FundamentalsResp:
      type: object
      properties:
        symbol: { type: string }
        PE: { type: number, nullable: true }
        PB: { type: number, nullable: true }
        MarketCap: { type: number, nullable: true }
        ROCE_approx: { type: number, nullable: true }
      required: [symbol]

    StrategySignal:
      type: object
      properties:
        signal:
          type: string
          enum: [BUY, SELL, NO_TRADE, INSUFFICIENT_DATA, ZERO_QTY]
        price: { type: number, nullable: true }
        qty: { type: integer, nullable: true }
        stop_loss: { type: number, nullable: true }
        target: { type: number, nullable: true }
        rsi: { type: number, nullable: true }
        ma200: { type: number, nullable: true }
        entry: { type: number, nullable: true }
        ma10: { type: number, nullable: true }
        ma40: { type: number, nullable: true }
        ema10: { type: number, nullable: true }
      required: [signal]

    ScreenIndicesReq:
      type: object
      properties:
        indices:
          type: array
          items: { type: string }
        symbols:
          type: array
          items: { type: string }
        strategies:
          type: array
          items:
            type: string
            enum: [PTJ, TURTLE, SEYKOTA, SCHWARTZ]
        min_strategies: { type: integer, default: 2 }
        balance: { type: number, default: 100000 }
        data_source:
          type: string
          enum: [auto, upstox, yfinance]
          default: auto
        unit: { type: string, default: days }
        interval: { type: string, default: '1' }
        historical_date: { type: string, format: date, nullable: true }
        use_upstox_price: { type: boolean, default: true }

    ScreenerPerSymbol:
      type: object
      properties:
        symbol: { type: string }
        current_price: { type: number, nullable: true }
        per_strategy:
          type: object
          properties:
            PTJ: { $ref: '#/components/schemas/StrategySignal
