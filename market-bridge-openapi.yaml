openapi: 3.1.0
info:
  title: Market Bridge API
  version: "2.0.0"
  description: |
    YFinance-first market analysis with Upstox as fallback and for holdings.
    - Random stock analysis and index scans do **not** require Upstox login.
    - Upstox OAuth is available for holdings and optional price/history fallback.
servers:
  - url: https://upstox-api.onrender.com

paths:
  /health:
    get:
      operationId: healthCheck
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  ts: { type: number }

  /oauth/upstox/login:
    get:
      operationId: upstoxLogin
      summary: Start Upstox OAuth (manual link open)
      parameters:
        - in: query
          name: user_key
          required: true
          schema: { type: string }
          description: Arbitrary user/session ID to tag the bearer token server-side.
      responses:
        "302":
          description: Redirects to the Upstox authorization dialog.

  /oauth/upstox/callback:
    get:
      operationId: upstoxCallback
      summary: Upstox OAuth callback
      parameters:
        - in: query
          name: code
          required: true
          schema: { type: string }
        - in: query
          name: state
          required: false
          schema: { type: string }
      responses:
        "200":
          description: Success or error HTML page
          content:
            text/html:
              schema:
                type: string

  /api/map:
    get:
      operationId: mapSymbol
      summary: Map a Yahoo symbol to Upstox instrument info (best-effort)
      parameters:
        - in: query
          name: symbol
          required: true
          schema: { type: string }
          description: Yahoo symbol (e.g., RELIANCE.NS)
      responses:
        "200":
          description: Mapping result
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: string }
                  found: { type: boolean }
                  message: { type: [string, "null"] }
                  trading_symbol: { type: [string, "null"] }
                  instrument_key: { type: [string, "null"] }
                  segment: { type: [string, "null"] }
                  exchange: { type: [string, "null"] }
                  short_name: { type: [string, "null"] }

  /api/historical:
    get:
      operationId: getHistorical
      summary: Historical OHLCV (yfinance primary; Yahoo chart API fallback)
      parameters:
        - in: query
          name: symbol
          required: true
          schema: { type: string }
        - in: query
          name: period
          required: false
          schema: { type: string, default: 6mo }
          description: e.g., 6mo, 1y, 5y
        - in: query
          name: interval
          required: false
          schema: { type: string, default: 1d }
          description: e.g., 1d, 1wk
      responses:
        "200":
          description: OHLCV candles
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: string }
                  candles:
                    type: array
                    items:
                      type: object
                      properties:
                        t: { type: string, description: ISO datetime }
                        o: { type: number }
                        h: { type: number }
                        l: { type: number }
                        c: { type: number }
                        v: { type: number }

  /api/constituents:
    get:
      operationId: getIndexConstituents
      summary: Get index constituents (NSE CSV preferred; Wikipedia fallback)
      parameters:
        - in: query
          name: index
          required: true
          schema: { type: string }
          description: e.g., NIFTY 50, NIFTY BANK, SENSEX
      responses:
        "200":
          description: Constituents
          content:
            application/json:
              schema:
                type: object
                properties:
                  index: { type: string }
                  found: { type: boolean }
                  count: { type: integer }
                  constituents:
                    type: array
                    items:
                      type: object
                      properties:
                        symbol: { type: string }
                        company: { type: string }

  /api/update_constituents:
    post:
      operationId: refreshIndexConstituents
      summary: Force refresh constituents for an index
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [index]
              properties:
                index:
                  type: string
                  description: Index name (e.g., NIFTY 50)
      responses:
        "200":
          description: Refresh result
          content:
            application/json:
              schema:
                type: object
                properties:
                  index: { type: string }
                  source: { type: string }
                  count: { type: integer }
                  file: { type: string }
                  message: { type: [string, "null"] }

  /api/ltp:
    get:
      operationId: getLtpUpstox
      summary: LTP via Upstox (requires OAuth or static bearer)
      parameters:
        - in: query
          name: instrument_keys
          required: true
          schema: { type: string }
          description: Comma-separated Upstox instrument keys.
        - in: query
          name: user_key
          required: false
          schema: { type: string }
          description: The user_key used at OAuth login; optional if using UPSTOX_STATIC_BEARER.
      responses:
        "200":
          description: Upstox LTP payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: [string, "null"]
                    description: Usually "success"
                  data:
                    type: object
                    description: Map of instrument_key -> quote fields
                    additionalProperties:
                      type: object
                      properties:
                        last_traded_price: { type: [number, "null"] }
                        ltp: { type: [number, "null"] }
                        last_price: { type: [number, "null"] }
                        close: { type: [number, "null"] }
                        instrument_token: { type: [string, "null"] }

  /api/fundamentals:
    get:
      operationId: getFundamentals
      summary: Basic fundamentals from yfinance
      parameters:
        - in: query
          name: symbol
          required: true
          schema: { type: string }
      responses:
        "200":
          description: Fundamentals
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: string }
                  PE: { type: [number, "null"] }
                  PB: { type: [number, "null"] }
                  MarketCap: { type: [number, "null"] }

  /api/analyze_stock:
    post:
      operationId: analyzeStock
      summary: Analyze a stock for Buy signal and/or Breakout Rally Ending (BRE)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [symbol]
              properties:
                symbol:
                  type: string
                  description: Yahoo symbol (e.g., TCS.NS)
                mode:
                  type: string
                  enum: [both, buy, breakout_end]
                  default: both
                historical_date:
                  type: [string, "null"]
                  description: YYYY-MM-DD for backtesting (returns price_on_date)
                balance:
                  type: number
                  default: 100000
                prefer_upstox:
                  type: boolean
                  default: false
                user_key:
                  type: [string, "null"]
                  description: Needed only if prefer_upstox=true and using OAuth (or set UPSTOX_STATIC_BEARER)
      responses:
        "200":
          description: Analysis result
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: string }
                  as_of: { type: string }
                  buy_signal:
                    type: [object, "null"]
                    properties:
                      per_strategy:
                        type: object
                        additionalProperties: true
                      combined:
                        type: string
                        description: BUY, SELL, MIXED
                      current_price:
                        type: [number, "null"]
                      price_on_date:
                        type: [number, "null"]
                      stop_loss:
                        type: [number, "null"]
                      target:
                        type: [number, "null"]
                  breakout_end:
                    type: object
                    properties:
                      symbol: { type: string }
                      as_of: { type: string }
                      current_price: { type: [number, "null"] }
                      bearish_candle: { type: boolean, description: "Close < Open" }
                      below_ema_fast: { type: boolean }
                      rsi_below_50: { type: boolean }
                      macd_hist_falling: { type: boolean }
                      volume_distribution: { type: boolean, description: "Down day with volume spike vs 20SMA" }
                      score: { type: integer, description: "Sum of triggered conditions (0-5)" }
                      verdict:
                        type: string
                        enum: [LIKELY_END, WATCH, OK]
                  debug:
                    type: object
                    properties:
                      ema_fast: { type: [number, "null"] }
                      rsi14: { type: [number, "null"] }
                      macd_hist_last: { type: [number, "null"] }
                      vol_avg20: { type: [number, "null"] }

  /api/screen_indices_one:
    post:
      operationId: screenIndicesOne
      summary: Run 4 long-term strategies on ONE symbol at a time (for batching in GPT)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                index:
                  type: [string, "null"]
                  description: e.g., NIFTY 50, BANK NIFTY, SENSEX
                symbols:
                  type: [array, "null"]
                  description: Use explicit symbols instead
