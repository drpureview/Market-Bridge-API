openapi: 3.1.0
info:
  title: Market Bridge API
  version: "2.0.0"
  description: |
    YFinance-first market analysis with Upstox as fallback and for holdings.
    - Random stock analysis and index scans do **not** require Upstox login.
    - Upstox OAuth is available for holdings and optional price/history fallback.
servers:
  - url: https://your-render-app.onrender.com
paths:
  /health:
    get:
      operationId: healthCheck
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  ts:
                    type: number

  /oauth/upstox/login:
    get:
      operationId: upstoxLogin
      summary: Start Upstox OAuth (manual link open)
      parameters:
        - in: query
          name: user_key
          required: true
          schema:
            type: string
          description: Arbitrary user/session ID used to store the bearer token server-side.
      responses:
        "302":
          description: Redirects to Upstox authorization dialog.

  /oauth/upstox/callback:
    get:
      operationId: upstoxCallback
      summary: Upstox OAuth callback
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
        - in: query
          name: state
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success or error HTML page
          content:
            text/html:
              schema:
                type: string

  /api/map:
    get:
      operationId: mapSymbol
      summary: Map a Yahoo symbol to Upstox instrument info (best-effort)
      parameters:
        - in: query
          name: symbol
          required: true
          schema:
            type: string
          description: Yahoo symbol (e.g., RELIANCE.NS)
      responses:
        "200":
          description: Mapping result
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: string }
                  found: { type: boolean }
                  message: { type: string }
                  trading_symbol: { type: string }
                  instrument_key: { type: string }
                  segment: { type: string }
                  exchange: { type: string }
                  short_name: { type: string }

  /api/historical:
    get:
      operationId: getHistorical
      summary: Historical OHLCV (yfinance primary; Yahoo chart API fallback)
      parameters:
        - in: query
          name: symbol
          required: true
          schema: { type: string }
        - in: query
          name: period
          required: false
          schema: { type: string, default: 6mo }
          description: e.g., 6mo, 1y, 5y
        - in: query
          name: interval
          required: false
          schema: { type: string, default: 1d }
          description: e.g., 1d, 1wk
      responses:
        "200":
          description: OHLCV candles
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: string }
                  candles:
                    type: array
                    items:
                      type: object
                      properties:
                        t: { type: string, description: ISO datetime }
                        o: { type: number }
                        h: { type: number }
                        l: { type: number }
                        c: { type: number }
                        v: { type: number }

  /api/constituents:
    get:
      operationId: getIndexConstituents
      summary: Get index constituents (NSE CSV preferred; Wikipedia fallback)
      parameters:
        - in: query
          name: index
          required: true
          schema: { type: string }
          description: e.g., NIFTY 50, NIFTY BANK, SENSEX
      responses:
        "200":
          description: Constituents
          content:
            application/json:
              schema:
                type: object
                properties:
                  index: { type: string }
                  found: { type: boolean }
                  count: { type: integer }
                  constituents:
                    type: array
                    items:
                      type: object
                      properties:
                        symbol: { type: string }
                        company: { type: string }

  /api/update_constituents:
    post:
      operationId: refreshIndexConstituents
      summary: Force refresh constituents for an index
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [index]
              properties:
                index:
                  type: string
                  description: Index name (e.g., NIFTY 50)
      responses:
        "200":
          description: Refresh result
          content:
            application/json:
              schema:
                type: object
                properties:
                  index: { type: string }
                  source: { type: string }
                  count: { type: integer }
                  file: { type: string }
                  message: { type: string }

  /api/ltp:
    get:
      operationId: getLtpUpstox
      summary: LTP via Upstox (requires OAuth or static bearer)
      parameters:
        - in: query
          name: instrument_keys
          required: true
          schema: { type: string }
          description: Comma-separated Upstox instrument keys.
        - in: query
          name: user_key
          required: false
          schema: { type: string }
          description: The user_key used at OAuth login; optional if using UPSTOX_STATIC_BEARER.
      responses:
        "200":
          description: Upstox LTP payload (pass-through)
          content:
            application/json:
              schema:
                type: object

  /api/fundamentals:
    get:
      operationId: getFundamentals
      summary: Basic fundamentals from yfinance
      parameters:
        - in: query
          name: symbol
          required: true
          schema: { type: string }
      responses:
        "200":
          description: Fundamentals
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: string }
                  PE: { type: number, nullable: true }
                  PB: { type: number, nullable: true }
                  MarketCap: { type: number, nullable: true }

  /api/analyze_stock:
    post:
      operationId: analyzeStock
      summary: Analyze a stock for Buy signal and/or Breakout Rally Ending (BRE)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeReq'
      responses:
        "200":
          description: Analysis result
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: string }
                  as_of: { type: string }
                  buy_signal:
                    type: object
                    nullable: true
                    properties:
                      per_strategy:
                        type: object
                        additionalProperties: true
                      combined:
                        type: string
                        description: BUY, SELL, MIXED
                      current_price:
                        type: number
                        nullable: true
                      price_on_date:
                        type: number
                        nullable: true
                      stop_loss:
                        type: number
                        nullable: true
                      target:
                        type: number
                        nullable: true
                  breakout_end:
                    $ref: '#/components/schemas/BreakoutEndHit'
                  debug:
                    type: object
                    properties:
                      ema_fast: { type: number, nullable: true }
                      rsi14: { type: number, nullable: true }
                      macd_hist_last: { type: number, nullable: true }
                      vol_avg20: { type: number, nullable: true }

  /api/screen_indices_one:
    post:
      operationId: screenIndicesOne
      summary: Run 4 long-term strategies on ONE symbol at a time (for batching in GPT)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenOneReq'
      responses:
        "200":
          description: One-symbol screening result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenOneResp'

  /api/holdings_list:
    get:
      operationId: getHoldingsList
      summary: Get Upstox holdings (normalized to YF tickers)
      parameters:
        - in: query
          name: user_key
          required: false
          schema: { type: string }
          description: The user_key used at OAuth login; optional if using UPSTOX_STATIC_BEARER.
      responses:
        "200":
          description: Symbols list
          content:
            application/json:
              schema:
                type: object
                properties:
                  count: { type: integer }
                  symbols:
                    type: array
                    items: { type: string }
                  raw:
                    type: array
                    items:
                      type: object

  /api/holdings_breakout_end_one:
    post:
      operationId: holdingsBreakoutEndOne
      summary: Check Breakout Rally Ending (BRE) for ONE holding at a time (cursor)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HoldingsBREOneReq'
      responses:
        "200":
          description: One holding BRE result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoldingsBREOneResp'

components:
  schemas:
    AnalyzeReq:
      type: object
      required: [symbol]
      properties:
        symbol:
          type: string
          description: Yahoo symbol (e.g., TCS.NS)
        mode:
          type: string
          enum: [both, buy, breakout_end]
          default: both
        historical_date:
          type: string
          nullable: true
          description: YYYY-MM-DD for backtesting (returns price_on_date)
        balance:
          type: number
          default: 100000
        prefer_upstox:
          type: boolean
          default: false
        user_key:
          type: string
          nullable: true
          description: Required only if prefer_upstox=true and using OAuth (or set UPSTOX_STATIC_BEARER)

    BreakoutEndHit:
      type: object
      properties:
        symbol: { type: string }
        as_of: { type: string }
        current_price:
          type: number
          nullable: true
        bearish_candle:
          type: boolean
          description: Close < Open
        below_ema_fast:
          type: boolean
        rsi_below_50:
          type: boolean
        macd_hist_falling:
          type: boolean
        volume_distribution:
          type: boolean
          description: Down day with volume spike vs 20SMA
        score:
          type: integer
          description: Sum of triggered conditions (0-5)
        verdict:
          type: string
          enum: [LIKELY_END, WATCH, OK]

    ScreenOneReq:
      type: object
      properties:
        index:
          type: string
          nullable: true
          description: e.g., NIFTY 50, BANK NIFTY, SENSEX
        symbols:
          type: array
          nullable: true
          items: { type: string }
          description: Use explicit symbols instead of index
        cursor:
          type: integer
          default: 0
          description: Position within the resolved symbols list
        historical_date:
          type: string
          nullable: true
          description: YYYY-MM-DD for backtesting (returns price_on_date)
        balance:
          type: number
          default: 100000
        prefer_upstox:
          type: boolean
          default: false
        user_key:
          type: string
          nullable: true

    ScreenOneResp:
      type: object
      properties:
        symbols_count: { type: integer }
        cursor: { type: integer }
        next_cursor:
          type: integer
          nullable: true
        done:
          type: boolean
        analyzed_symbol: { type: string }
        current_price:
          type: number
          nullable: true
        price_on_date:
          type: number
          nullable: true
        stop_loss:
          type: number
          nullable: true
        target:
          type: number
          nullable: true
        per_strategy:
          type: object
          description: Per-strategy result map (PTJ, TURTLE, SEYKOTA, SCHWARTZ)
          additionalProperties: true
        combined:
          type: string
          description: BUY, SELL, MIXED, or NO_CONSENSUS
        as_of:
          type: string
          description: Current date or historical_date if provided

    HoldingsBREOneReq:
      type: object
      properties:
        user_key:
          type: string
          nullable: true
          description: Required for OAuth unless UPSTOX_STATIC_BEARER is set
        cursor:
          type: integer
          default: 0
        prefer_upstox:
          type: boolean
          default: false

    HoldingsBREOneResp:
      type: object
      properties:
        symbols_count: { type: integer }
        cursor: { type: integer }
        next_cursor:
          type: integer
          nullable: true
        done: { type: boolean }
        analyzed_symbol: { type: string }
        as_of: { type: string }
        breakout_end:
          $ref: '#/components/schemas/BreakoutEndHit'
